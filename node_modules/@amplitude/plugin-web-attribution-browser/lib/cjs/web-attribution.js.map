{"version":3,"file":"web-attribution.js","sourceRoot":"","sources":["../../src/web-attribution.ts"],"names":[],"mappings":"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","sourcesContent":["import { CampaignParser } from '@amplitude/analytics-client-common';\nimport {\n  BeforePlugin,\n  BrowserClient,\n  BrowserConfig,\n  Campaign,\n  Event,\n  PluginType,\n  Storage,\n} from '@amplitude/analytics-types';\nimport { createCampaignEvent, getStorageKey, isNewCampaign } from './helpers';\nimport { CreateWebAttributionPlugin, CreateWebAttributionPluginParameters, Options } from './typings/web-attribution';\n\nexport const webAttributionPlugin: CreateWebAttributionPlugin = function (\n  ...args: CreateWebAttributionPluginParameters\n) {\n  let amplitude: BrowserClient | undefined;\n  let options: Options = {};\n\n  const [clientOrOptions, configOrUndefined] = args;\n  if (clientOrOptions && 'init' in clientOrOptions) {\n    amplitude = clientOrOptions;\n    if (configOrUndefined) {\n      options = configOrUndefined;\n    }\n  } else if (clientOrOptions) {\n    options = clientOrOptions;\n  }\n\n  const excludeReferrers = options.excludeReferrers ?? [];\n  if (typeof location !== 'undefined') {\n    excludeReferrers.unshift(location.hostname);\n  }\n\n  options = {\n    disabled: false,\n    initialEmptyValue: 'EMPTY',\n    resetSessionOnNewCampaign: false,\n    ...options,\n    excludeReferrers,\n  };\n\n  const plugin: BeforePlugin = {\n    name: 'web-attribution',\n    type: PluginType.BEFORE,\n\n    setup: async function (config: BrowserConfig, client?: BrowserClient) {\n      amplitude = amplitude ?? client;\n      if (!amplitude) {\n        const receivedType = clientOrOptions ? 'Options' : 'undefined';\n        config.loggerProvider.error(\n          `Argument of type '${receivedType}' is not assignable to parameter of type 'BrowserClient'.`,\n        );\n        return;\n      }\n\n      if (options.disabled) {\n        config.loggerProvider.log('@amplitude/plugin-web-attribution-browser is disabled. Attribution is not tracked.');\n        return;\n      }\n\n      config.loggerProvider.log('Installing @amplitude/plugin-web-attribution-browser.');\n\n      if (!client && !config.attribution?.disabled) {\n        config.loggerProvider.warn(\n          '@amplitude/plugin-web-attribution-browser overrides web attribution behavior defined in @amplitude/analytics-browser. Resolve by disabling web attribution tracking in @amplitude/analytics-browser.',\n        );\n        config.attribution = {\n          disabled: true,\n        };\n      }\n\n      // Share cookie storage with user session storage\n      const storage = config.cookieStorage as unknown as Storage<Campaign>;\n      const storageKey = getStorageKey(config.apiKey, 'MKTG');\n\n      const [currentCampaign, previousCampaign] = await Promise.all([\n        new CampaignParser().parse(),\n        storage.get(storageKey),\n      ]);\n\n      // For Amplitude-internal functionality\n      // if pluginEnabledOverride === undefined then use plugin default logic\n      // if pluginEnabledOverride === true then track attribution\n      // if pluginEnabledOverride === false then do not track attribution\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n      const pluginEnabledOverride: boolean | undefined = (this as any).__pluginEnabledOverride;\n\n      if (pluginEnabledOverride ?? isNewCampaign(currentCampaign, previousCampaign, options)) {\n        if (options.resetSessionOnNewCampaign) {\n          amplitude.setSessionId(Date.now());\n          config.loggerProvider.log('Created a new session for new campaign.');\n        }\n        config.loggerProvider.log('Tracking attribution.');\n        const campaignEvent = createCampaignEvent(currentCampaign, options);\n        amplitude.track(campaignEvent);\n        void storage.set(storageKey, currentCampaign);\n      }\n    },\n\n    execute: async (event: Event) => event,\n  };\n\n  // For Amplitude-internal functionality\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  (plugin as any).__pluginEnabledOverride = undefined;\n\n  return plugin;\n};\n"]}